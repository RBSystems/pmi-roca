#ifndef __S2_PJLINK_H__
#define __S2_PJLINK_H__




/*
* Constructor and Destructor
*/

/*
* DIGITAL_INPUT
*/


/*
* ANALOG_INPUT
*/

#define __S2_PJLINK_COMMAND$_STRING_INPUT 0
#define __S2_PJLINK_COMMAND$_STRING_MAX_LEN 15
CREATE_STRING_STRUCT( S2_PJLINK, __COMMAND$, __S2_PJLINK_COMMAND$_STRING_MAX_LEN );



/*
* DIGITAL_OUTPUT
*/
#define __S2_PJLINK_DOCLIENTCONNECTED_DIG_OUTPUT 0
#define __S2_PJLINK_LAMP1ON$_DIG_OUTPUT 1
#define __S2_PJLINK_LAMP2ON$_DIG_OUTPUT 2
#define __S2_PJLINK_FANWARNING$_DIG_OUTPUT 3
#define __S2_PJLINK_FANERROR$_DIG_OUTPUT 4
#define __S2_PJLINK_LAMPWARNING$_DIG_OUTPUT 5
#define __S2_PJLINK_LAMPERROR$_DIG_OUTPUT 6
#define __S2_PJLINK_TEMPERATUREWARNING$_DIG_OUTPUT 7
#define __S2_PJLINK_TEMPERATUREERROR$_DIG_OUTPUT 8
#define __S2_PJLINK_COVEROPENWARNING$_DIG_OUTPUT 9
#define __S2_PJLINK_COVEROPENERROR$_DIG_OUTPUT 10
#define __S2_PJLINK_FILTERWARNING$_DIG_OUTPUT 11
#define __S2_PJLINK_FILTERERROR$_DIG_OUTPUT 12
#define __S2_PJLINK_OTHERWARNING$_DIG_OUTPUT 13
#define __S2_PJLINK_OTHERERROR$_DIG_OUTPUT 14


/*
* ANALOG_OUTPUT
*/
#define __S2_PJLINK_AOCLIENTSTATUS_ANALOG_OUTPUT 0
#define __S2_PJLINK_INPUTFEEDBACK$_ANALOG_OUTPUT 1
#define __S2_PJLINK_LAMP1HOURS$_ANALOG_OUTPUT 2
#define __S2_PJLINK_LAMP2HOURS$_ANALOG_OUTPUT 3

#define __S2_PJLINK_SENDTOSIMPLEWINDOWS$_STRING_OUTPUT 4


/*
* Direct Socket Variables
*/

#define __S2_PJLINK_MYCLIENT_SOCKET 1
#define __S2_PJLINK_MYCLIENT_STRING_MAX_LEN 1024
START_SOCKET_DEFINITION( S2_PJLINK, __MYCLIENT )
{
   int SocketStatus;
   enum ESplusSocketType eSocketType;
   int SocketID;
   void *SocketPtr;
CREATE_SOCKET_STRING( S2_PJLINK, SocketRxBuf, __S2_PJLINK_MYCLIENT_STRING_MAX_LEN );
};



/*
* INTEGER_PARAMETER
*/
#define __S2_PJLINK_PROJECTOR_TCPIP_PORTNUMBER_INTEGER_PARAMETER 10
/*
* SIGNED_INTEGER_PARAMETER
*/
/*
* LONG_INTEGER_PARAMETER
*/
/*
* SIGNED_LONG_INTEGER_PARAMETER
*/
/*
* INTEGER_PARAMETER
*/
/*
* SIGNED_INTEGER_PARAMETER
*/
/*
* LONG_INTEGER_PARAMETER
*/
/*
* SIGNED_LONG_INTEGER_PARAMETER
*/
/*
* STRING_PARAMETER
*/
#define __S2_PJLINK_PROJECTOR_IP_ADDRESS_STRING_PARAMETER 11
#define __S2_PJLINK_PJLINKPASSWORD_STRING_PARAMETER 12
#define __S2_PJLINK_PROJECTOR_IP_ADDRESS_PARAM_MAX_LEN 256
CREATE_STRING_STRUCT( S2_PJLINK, __PROJECTOR_IP_ADDRESS, __S2_PJLINK_PROJECTOR_IP_ADDRESS_PARAM_MAX_LEN );
#define __S2_PJLINK_PJLINKPASSWORD_PARAM_MAX_LEN 256
CREATE_STRING_STRUCT( S2_PJLINK, __PJLINKPASSWORD, __S2_PJLINK_PJLINKPASSWORD_PARAM_MAX_LEN );


/*
* INTEGER
*/
CREATE_INTARRAY1D( S2_PJLINK, __HEX_TAB, 16 );;


/*
* LONG_INTEGER
*/


/*
* SIGNED_INTEGER
*/


/*
* SIGNED_LONG_INTEGER
*/
CREATE_SIGNED_LONGARRAY1D( S2_PJLINK, __BIN, 2000 );;
CREATE_SIGNED_LONGARRAY1D( S2_PJLINK, __BINARRAY, 4 );;


/*
* STRING
*/
#define __S2_PJLINK_SCLIENTRX$_STRING_MAX_LEN 256
CREATE_STRING_STRUCT( S2_PJLINK, __SCLIENTRX$, __S2_PJLINK_SCLIENTRX$_STRING_MAX_LEN );
#define __S2_PJLINK_COMMANDVALUE$_STRING_MAX_LEN 256
CREATE_STRING_STRUCT( S2_PJLINK, __COMMANDVALUE$, __S2_PJLINK_COMMANDVALUE$_STRING_MAX_LEN );
#define __S2_PJLINK_REPLYERR$_STRING_MAX_LEN 256
CREATE_STRING_STRUCT( S2_PJLINK, __REPLYERR$, __S2_PJLINK_REPLYERR$_STRING_MAX_LEN );
#define __S2_PJLINK_REPLYVALUE$_STRING_MAX_LEN 256
CREATE_STRING_STRUCT( S2_PJLINK, __REPLYVALUE$, __S2_PJLINK_REPLYVALUE$_STRING_MAX_LEN );
#define __S2_PJLINK_RNDM$_STRING_MAX_LEN 256
CREATE_STRING_STRUCT( S2_PJLINK, __RNDM$, __S2_PJLINK_RNDM$_STRING_MAX_LEN );
#define __S2_PJLINK_COMMANDLIST_STRING_MAX_LEN 512
CREATE_STRING_STRUCT( S2_PJLINK, __COMMANDLIST, __S2_PJLINK_COMMANDLIST_STRING_MAX_LEN );
#define __S2_PJLINK_RXCOMMAND_STRING_MAX_LEN 512
CREATE_STRING_STRUCT( S2_PJLINK, __RXCOMMAND, __S2_PJLINK_RXCOMMAND_STRING_MAX_LEN );
#define __S2_PJLINK_NEXTCOMMAND_STRING_MAX_LEN 256
CREATE_STRING_STRUCT( S2_PJLINK, __NEXTCOMMAND, __S2_PJLINK_NEXTCOMMAND_STRING_MAX_LEN );
#define __S2_PJLINK_REPLYOK_STRING_MAX_LEN 256
CREATE_STRING_STRUCT( S2_PJLINK, __REPLYOK, __S2_PJLINK_REPLYOK_STRING_MAX_LEN );

/*
* STRUCTURE
*/

START_GLOBAL_VAR_STRUCT( S2_PJLINK )
{
   void* InstancePtr;
   struct GenericOutputString_s sGenericOutStr;
   unsigned short LastModifiedArrayIndex;

   unsigned short __RXVALUE;
   unsigned short __ISTARTCLIENT;
   unsigned short __RXOK;
   unsigned short __PROCESSINGCOMMANDS;
   unsigned short __REPLYACK;
   unsigned short __HELPRX;
   unsigned short __QUERY;
   DECLARE_INTARRAY( S2_PJLINK, __HEX_TAB );
   long __CHRSZ;
   DECLARE_SIGNED_LONGARRAY( S2_PJLINK, __BIN );
   DECLARE_SIGNED_LONGARRAY( S2_PJLINK, __BINARRAY );
   DECLARE_STRING_STRUCT( S2_PJLINK, __SCLIENTRX$ );
   DECLARE_STRING_STRUCT( S2_PJLINK, __COMMANDVALUE$ );
   DECLARE_STRING_STRUCT( S2_PJLINK, __REPLYERR$ );
   DECLARE_STRING_STRUCT( S2_PJLINK, __REPLYVALUE$ );
   DECLARE_STRING_STRUCT( S2_PJLINK, __RNDM$ );
   DECLARE_STRING_STRUCT( S2_PJLINK, __COMMANDLIST );
   DECLARE_STRING_STRUCT( S2_PJLINK, __RXCOMMAND );
   DECLARE_STRING_STRUCT( S2_PJLINK, __NEXTCOMMAND );
   DECLARE_STRING_STRUCT( S2_PJLINK, __REPLYOK );
   DECLARE_STRING_STRUCT( S2_PJLINK, __COMMAND$ );
   DECLARE_SOCKET( S2_PJLINK, __MYCLIENT );
   DECLARE_STRING_STRUCT( S2_PJLINK, __PROJECTOR_IP_ADDRESS );
   DECLARE_STRING_STRUCT( S2_PJLINK, __PJLINKPASSWORD );
};

START_NVRAM_VAR_STRUCT( S2_PJLINK )
{
};

DEFINE_WAITEVENT( S2_PJLINK, WAITERSECURE );
DEFINE_WAITEVENT( S2_PJLINK, WAITER );
DEFINE_WAITEVENT( S2_PJLINK, AUTODISCONNECT );


#endif //__S2_PJLINK_H__

